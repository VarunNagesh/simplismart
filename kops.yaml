apiVersion: kops.k8s.io/v1alpha2
kind: Cluster
metadata:
  creationTimestamp: null
  name: private.internal
kubeAPIServer:
  apiAudiences:
    - api
    - istio-ca
  serviceAccountIssuer: kubernetes.default.svc
  serviceAccountKeyFile:
    - /srv/kubernetes/server.key
  serviceAccountSigningKeyFile: /srv/kubernetes/server.key
spec:
  interruptionHandlerQueue:
    name: interruption-queue
  serviceAccountIssuerDiscovery:
    discoveryStore: s3://prod-public-09876i
    enableAWSOIDCProvider: true
  karpenter:
    enabled: true
  podIdentityWebhook:
    enabled: true
  externalPolicies:
    node:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
  metricsServer:
    enabled: true
  awsLoadBalancerController:
    enabled: false
  certManager:
    enabled: true
    defaultIssuer: letsencrypt-prod-nginx
  api:
    dns: {}
  authorization:
    rbac: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://prod-k8s-state-store-09876i/private.internal
  containerRuntime: containerd
  etcdClusters:
    - cpuRequest: 200m
      etcdMembers:
        - encryptedVolume: true
          instanceGroup: control-plane-us-east-1a
          name: a
        - encryptedVolume: true
          instanceGroup: control-plane-us-east-1b
          name: b
        - encryptedVolume: true
          instanceGroup: control-plane-us-east-1c
          name: c
      memoryRequest: 100Mi
      name: main
    - cpuRequest: 100m
      etcdMembers:
        - encryptedVolume: true
          instanceGroup: control-plane-us-east-1a
          name: a
        - encryptedVolume: true
          instanceGroup: control-plane-us-east-1b
          name: b
        - encryptedVolume: true
          instanceGroup: control-plane-us-east-1c
          name: c
      memoryRequest: 100Mi
      name: events
  iam:
    useServiceAccountExternalPermissions: true
    allowContainerRegistry: true
    legacy: false
  kubelet:
    anonymousAuth: false
    authorizationMode: Webhook
    authenticationTokenWebhook: true
    evictionHard: memory.available<20%,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%
  kubernetesApiAccess:
    - 178.20.59.39/32

  kubernetesVersion: v1.25.5
  masterPublicName: api.private.internal
  networkID: vpc-0fb3559392ac0fb42
  networkCIDR: 178.20.0.0/16
  networking:
    calico:
      majorVersion: v3
  nonMasqueradeCIDR: 100.0.0.0/10
  sshAccess:
    - 178.20.59.39/32

  subnets:
    - cidr: 178.20.128.0/19
      name: us-east-1a
      type: Private
      zone: us-east-1a
      id: subnet-05b18bd3b8154a614

    - cidr: 178.20.160.0/19
      name: us-east-1b
      type: Private
      zone: us-east-1b
      id: subnet-05398d05aa440ef41

    - cidr: 178.20.192.0/19
      name: us-east-1c
      type: Private
      zone: us-east-1c
      id: subnet-06a4a1af03e1a96c3

    - cidr: 178.20.32.0/19
      name: utility-us-east-1a
      type: Utility
      zone: us-east-1a
      id: subnet-04e4e68cc0abb9cfc

    - cidr: 178.20.64.0/19
      name: utility-us-east-1b
      type: Utility
      zone: us-east-1b
      id: subnet-02f88e59fc3eddb4e

    - cidr: 178.20.96.0/19
      name: utility-us-east-1c
      type: Utility
      zone: us-east-1c
      id: subnet-0620391fe5eb2878c
  topology:
    dns:
      type: Private
    masters: private
    nodes: private
  sshKeyName: k8s-nodes
  kubeDNS:
    provider: CoreDNS
---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: private.internal
  name: control-plane-us-east-1a
spec:
  image: ami-0b5eea76982371e91
  instanceMetadata:
    httpPutResponseHopLimit: 3
    httpTokens: required
  machineType: t3a.medium
  maxSize: 1
  minSize: 1
  role: Master
  subnets:
    - us-east-1a

---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: private.internal
  name: control-plane-us-east-1b
spec:
  image: ami-0b5eea76982371e91
  instanceMetadata:
    httpPutResponseHopLimit: 3
    httpTokens: required
  machineType: t3a.medium
  maxSize: 1
  minSize: 1
  role: Master
  subnets:
    - us-east-1b

---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: private.internal
  name: control-plane-us-east-1c
spec:
  image: ami-0b5eea76982371e91
  instanceMetadata:
    httpPutResponseHopLimit: 3
    httpTokens: required
  machineType: t3a.medium
  maxSize: 1
  minSize: 1
  role: Master
  subnets:
    - us-east-1c

---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: private.internal
  name: nodes
spec:
  capacityRebalance: true
  manager: Karpenter
  instanceMetadata:
    httpPutResponseHopLimit: 3
    httpTokens: required
  image: ami-0b5eea76982371e91
  machineType: t3a.medium
  mixedInstancesPolicy:
    instances:
    - t3a.medium
    onDemandAboveBase: 0
    onDemandBase: 0
    spotAllocationStrategy: price-capacity-optimized
  rootVolumeSize: 30
  maxSize: 5
  minSize: 3
  nodeLabels:
    kops.k8s.io/instancegroup: nodes
  role: Node
  subnets:
    - us-east-1a
    - us-east-1b
    - us-east-1c